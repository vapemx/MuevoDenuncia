// Variables globales
let denunciaContract;

const ABI_DEL_CONTRATO_DENUNCIA = [
  {
    "_format": "hh-sol-artifact-1",
    "contractName": "Denuncia",
    "sourceName": "contracts/denuncia.sol",
    "abi": [
      { "inputs": [{"internalType": "string","name": "_mensajeHash","type": "string"},
          {
            "internalType": "string",
            "name": "_fecha",
            "type": "string"
          }],

        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "fecha",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "firmadoPor",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [{"internalType": "string","name": "_mensajeHash","type": "string"},
          {
            "internalType": "string",
            "name": "_fecha",
            "type": "string"
          }],
        "name": "firmarContrato",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "mensajeHash",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "resolverDenuncia",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "status",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": "0x60806040523480156200001157600080fd5b5060405162000d3f38038062000d3f83398181016040528101906200003791906200031b565b81600090805190602001906200004f929190620000ce565b50806001908051906020019062000068929190620000ce565b506000600260006101000a81548160ff0219169083151502179055506000600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000405565b828054620000dc90620003cf565b90600052602060002090601f0160209004810192826200010057600085556200014c565b82601f106200011b57805160ff19168380011785556200014c565b828001600101855582156200014c579182015b828111156200014b5782518255916020019190600101906200012e565b5b5090506200015b91906200015f565b5090565b5b808211156200017a57600081600090555060010162000160565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001e7826200019c565b810181811067ffffffffffffffff82111715620002095762000208620001ad565b5b80604052505050565b60006200021e6200017e565b90506200022c8282620001dc565b919050565b600067ffffffffffffffff8211156200024f576200024e620001ad565b5b6200025a826200019c565b9050602081019050919050565b60005b83811015620002875780820151818401526020810190506200026a565b8381111562000297576000848401525b50505050565b6000620002b4620002ae8462000231565b62000212565b905082815260208101848484011115620002d357620002d262000197565b5b620002e084828562000267565b509392505050565b600082601f8301126200030057620002ff62000192565b5b8151620003128482602086016200029d565b91505092915050565b6000806040838503121562000335576200033462000188565b5b600083015167ffffffffffffffff8111156200035657620003556200018d565b5b6200036485828601620002e8565b925050602083015167ffffffffffffffff8111156200038857620003876200018d565b5b6200039685828601620002e8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003e857607f821691505b60208210811415620003ff57620003fe620003a0565b5b50919050565b61092a80620004156000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637e81e0d51161005b5780637e81e0d5146100da578063803f1fdd146100f85780638da5cb5b14610116578063a50752f4146101345761007d565b8063200d2ed214610082578063700074a3146100a057806372b041b7146100bc575b600080fd5b61008a61013e565b60405161009791906104c8565b60405180910390f35b6100ba60048036038101906100b5919061063d565b610151565b005b6100c46101df565b6040516100d1919061073d565b60405180910390f35b6100e261026d565b6040516100ef919061073d565b60405180910390f35b6101006102fb565b60405161010d91906107a0565b60405180910390f35b61011e610321565b60405161012b91906107a0565b60405180910390f35b61013c610329565b005b600260009054906101000a900460ff1681565b816000908051906020019061016792919061040a565b50806001908051906020019061017e92919061040a565b5033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260006101000a81548160ff0219169083151502179055505050565b600080546101ec906107ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610218906107ea565b80156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b505050505081565b6001805461027a906107ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102a6906107ea565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b505050505081565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600030905090565b600260009054906101000a900460ff16610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f90610842565b60405180910390fd5b610380610321565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e4906108d4565b60405180910390fd5b6000600260006101000a81548160ff021916908315150217905550565b828054610416906107ea565b90600052602060002090601f016020900481019282610438576000855561047f565b82601f1061045157805160ff191683800117855561047f565b8280016001018555821561047f579182015b8281111561047e578251825591602001919060010190610463565b5b50905061048c9190610490565b5090565b5b808211156104a9576000816000905550600101610491565b5090565b60008115159050919050565b6104c2816104ad565b82525050565b60006020820190506104dd60008301846104b9565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61054a82610501565b810181811067ffffffffffffffff8211171561056957610568610512565b5b80604052505050565b600061057c6104e3565b90506105888282610541565b919050565b600067ffffffffffffffff8211156105a8576105a7610512565b5b6105b182610501565b9050602081019050919050565b82818337600083830152505050565b60006105e06105db8461058d565b610572565b9050828152602081018484840111156105fc576105fb6104fc565b5b6106078482856105be565b509392505050565b600082601f830112610624576106236104f7565b5b81356106348482602086016105cd565b91505092915050565b60008060408385031215610654576106536104ed565b5b600083013567ffffffffffffffff811115610672576106716104f2565b5b61067e8582860161060f565b925050602083013567ffffffffffffffff81111561069f5761069e6104f2565b5b6106ab8582860161060f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ef5780820151818401526020810190506106d4565b838111156106fe576000848401525b50505050565b600061070f826106b5565b61071981856106c0565b93506107298185602086016106d1565b61073281610501565b840191505092915050565b600060208201905081810360008301526107578184610704565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078a8261075f565b9050919050565b61079a8161077f565b82525050565b60006020820190506107b56000830184610791565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061080257607f821691505b60208210811415610816576108156107bb565b5b50919050565b50565b600061082c6000836106c0565b91506108378261081c565b600082019050919050565b6000602082019050818103600083015261085b8161081f565b9050919050565b7f536f6c6f20656c2070726f706965746172696f207075656465207265736f6c7660008201527f6572206c612064656e756e636961000000000000000000000000000000000000602082015250565b60006108be602e836106c0565b91506108c982610862565b604082019050919050565b600060208201905081810360008301526108ed816108b1565b905091905056fea26469706673582212204b38d58c925311656a188583af86125d7e4bd6982065f43986d50eac031a64c364736f6c63430008090033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80637e81e0d51161005b5780637e81e0d5146100da578063803f1fdd146100f85780638da5cb5b14610116578063a50752f4146101345761007d565b8063200d2ed214610082578063700074a3146100a057806372b041b7146100bc575b600080fd5b61008a61013e565b60405161009791906104c8565b60405180910390f35b6100ba60048036038101906100b5919061063d565b610151565b005b6100c46101df565b6040516100d1919061073d565b60405180910390f35b6100e261026d565b6040516100ef919061073d565b60405180910390f35b6101006102fb565b60405161010d91906107a0565b60405180910390f35b61011e610321565b60405161012b91906107a0565b60405180910390f35b61013c610329565b005b600260009054906101000a900460ff1681565b816000908051906020019061016792919061040a565b50806001908051906020019061017e92919061040a565b5033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260006101000a81548160ff0219169083151502179055505050565b600080546101ec906107ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610218906107ea565b80156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b505050505081565b6001805461027a906107ea565b80601f01602080910402602001604051908101604052809291908181526020018280546102a6906107ea565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b505050505081565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600030905090565b600260009054906101000a900460ff16610378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036f90610842565b60405180910390fd5b610380610321565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e4906108d4565b60405180910390fd5b6000600260006101000a81548160ff021916908315150217905550565b828054610416906107ea565b90600052602060002090601f016020900481019282610438576000855561047f565b82601f1061045157805160ff191683800117855561047f565b8280016001018555821561047f579182015b8281111561047e578251825591602001919060010190610463565b5b50905061048c9190610490565b5090565b5b808211156104a9576000816000905550600101610491565b5090565b60008115159050919050565b6104c2816104ad565b82525050565b60006020820190506104dd60008301846104b9565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61054a82610501565b810181811067ffffffffffffffff8211171561056957610568610512565b5b80604052505050565b600061057c6104e3565b90506105888282610541565b919050565b600067ffffffffffffffff8211156105a8576105a7610512565b5b6105b182610501565b9050602081019050919050565b82818337600083830152505050565b60006105e06105db8461058d565b610572565b9050828152602081018484840111156105fc576105fb6104fc565b5b6106078482856105be565b509392505050565b600082601f830112610624576106236104f7565b5b81356106348482602086016105cd565b91505092915050565b60008060408385031215610654576106536104ed565b5b600083013567ffffffffffffffff811115610672576106716104f2565b5b61067e8582860161060f565b925050602083013567ffffffffffffffff81111561069f5761069e6104f2565b5b6106ab8582860161060f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106ef5780820151818401526020810190506106d4565b838111156106fe576000848401525b50505050565b600061070f826106b5565b61071981856106c0565b93506107298185602086016106d1565b61073281610501565b840191505092915050565b600060208201905081810360008301526107578184610704565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078a8261075f565b9050919050565b61079a8161077f565b82525050565b60006020820190506107b56000830184610791565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061080257607f821691505b60208210811415610816576108156107bb565b5b50919050565b50565b600061082c6000836106c0565b91506108378261081c565b600082019050919050565b6000602082019050818103600083015261085b8161081f565b9050919050565b7f536f6c6f20656c2070726f706965746172696f207075656465207265736f6c7660008201527f6572206c612064656e756e636961000000000000000000000000000000000000602082015250565b60006108be602e836106c0565b91506108c982610862565b604082019050919050565b600060208201905081810360008301526108ed816108b1565b905091905056fea26469706673582212204b38d58c925311656a188583af86125d7e4bd6982065f43986d50eac031a64c364736f6c63430008090033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }
  
];
  
// Resto del código...

// Crear una instancia de web3
const web3 = new Web3('https://sepolia.infura.io/v3/af40d34f98974ade80b966854549e5ad'); // Reemplaza con tu propia URL de Infura o nodo Ethereum

// Función para conectar con Metamask
async function connectMetamask() {
  
  if (typeof window.ethereum !== 'undefined') {
    try {
      // Solicitar acceso a la cuenta de Metamask
      await window.ethereum.enable();

      // Cargar el ABI del contrato de denuncia (directamente en el código)
      const abi = ABI_DEL_CONTRATO_DENUNCIA;

      // Crear una instancia del contrato Denuncia
      const contractAddress = '0x7a988727615995a6235C8b93ea2f63be6e948cbD'; // Reemplaza con la dirección del contrato de denuncia
      denunciaContract = new web3.eth.Contract(abi, contractAddress);

      // Mostrar el formulario de envío de contrato
      document.getElementById('contractForm').style.display = 'block';
      document.getElementById('metamaskStatus').innerHTML = 'Conectado a Metamask';
    } catch (error) {
      console.error('Error al conectar con Metamask:', error);
    }
  } else {
    console.error('Metamask no detectado en el navegador');
  }
}

// Cargar el ABI del contrato de denuncia al iniciar la página
window.addEventListener('DOMContentLoaded', async () => {
  try {
    // Cargar el ABI del contrato de denuncia (directamente en el código)
    const abi = ABI_DEL_CONTRATO_DENUNCIA;

    // Crear una instancia del contrato Denuncia
    const contractAddress = '0x7a988727615995a6235C8b93ea2f63be6e948cbD'; // Reemplaza con la dirección del contrato de denuncia
    denunciaContract = new web3.eth.Contract(abi, contractAddress);
  } catch (error) {
    console.error('Error al cargar el ABI del contrato de denuncia:', error);
  }
});

//Función para enviar el contrato
async function enviarContrato() {
  try {
    // Obtener los valores del formulario
    const mensaje = document.getElementById('mensajeInput').value;
    const fecha = document.getElementById('fechaInput').value;

    // Obtener la dirección del usuario conectado a Metamask
    const accounts = await web3.eth.getAccounts();
    const userAddress = accounts[1];
    
    const mensajeDiv = document.getElementById(userAddress);
    
    
    denunciaContract.methods.firmarContrato(mensaje, fecha).call({ from: userAddress })
      .on('transactionHash', (hash) => {
        console.log('Transacción enviada. Hash de transacción:', hash);
      })
      .on('confirmation', (confirmationNumber, receipt) => {
        console.log('Transacción confirmada. Número de confirmación:', confirmationNumber);
        console.log('Recibo de transacción:', receipt);
      })
      .on('error', (error) => {
        console.error('Error al enviar la transacción:', error);
      });
      console.log("Si");
  
  } catch (error) {
    console.error('Error al enviar el contrato:', error);
  }
}